name: "CodeQL Analysis"

on:
  push:
    branches: [main]
  pull_request:
    # Analyze pull requests against main
    branches: [main]
  schedule:
    - cron: '0 2 * * *'  # Daily analysis at 2am

jobs:
  analyze:
    # Matrix strategy to run per language
    strategy:
      matrix:
        language: [java, cpp, swift]

    runs-on: ${{ matrix.language == 'swift' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Common CodeQL setup
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # Manual build for Java
      - name: Build Java code
        if: matrix.language == 'java'
        run: |
          if [ -f ./gradlew ]; then
            echo "Using gradlew wrapper"
            ./gradlew build --no-daemon
          elif command -v mvn >/dev/null 2>&1; then
            echo "Using Maven"
            mvn clean compile
          else
            echo "No build tool found for Java, skipping build"
          fi

      # Manual build for C++
      - name: Build C++ code
        if: matrix.language == 'cpp'
        run: |
          if [ -f linux/Makefile ]; then
            cd linux
            make
          else
            echo "No Makefile found in linux/, skipping C++ build"
          fi

      # Flutter setup for Swift/macOS
      - name: Setup Flutter SDK
        if: matrix.language == 'swift'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.0'  # Adjust to your Flutter version

      - name: Flutter pub get
        if: matrix.language == 'swift'
        run: flutter pub get

      - name: Flutter build macos
        if: matrix.language == 'swift'
        run: flutter build macos --no-codesign

      # Run CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
