name: "CodeQL Analysis"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2am

env:
  ANDROID_SDK_ROOT: /usr/lib/android-sdk

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ matrix.language == 'swift' && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: 60
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [java, swift]  # Removed cpp as it's not finding source code

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Java environment
      - name: Setup Java
        if: matrix.language == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Flutter SDK for both Java (Android) and Swift
      - name: Setup Flutter SDK
        if: matrix.language == 'java' || matrix.language == 'swift'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'  # Updated to match your Dart SDK requirement
          channel: 'stable'

      # Update Dart SDK constraint in pubspec.yaml
      - name: Update Dart SDK constraint
        if: matrix.language == 'java' || matrix.language == 'swift'
        run: |
          if [ -f pubspec.yaml ]; then
            # Temporarily update the SDK constraint to match available Dart version
            sed -i.bak 's/sdk: '\''>=.*'\''/sdk: '\''>=3.0.0 <4.0.0'\''/' pubspec.yaml || \
            sed -i.bak 's/sdk: ">=.*"/sdk: ">=3.0.0 <4.0.0"/' pubspec.yaml || \
            echo "Could not update SDK constraint automatically"
          fi

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Build Java code
        if: matrix.language == 'java'
        run: |
          echo "Building Java/Kotlin code..."

          # Get Flutter dependencies first
          if [ -f pubspec.yaml ]; then
            echo "Getting Flutter dependencies..."
            flutter pub get
          fi

          if [ -f android/build.gradle ] || [ -f android/build.gradle.kts ]; then
            echo "Android project detected"
            
            # Setup Android environment
            FLUTTER_SDK_PATH=$(flutter sdk-path)
            echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
            echo "flutter.sdk=$FLUTTER_SDK_PATH" >> android/local.properties
            
            # Install Android SDK components if needed
            sudo apt-get update
            sudo apt-get install -y android-sdk
            
            cd android
            if [ -f ./gradlew ]; then
              chmod +x ./gradlew
              ./gradlew assembleDebug --no-daemon --stacktrace --info
            else
              gradle assembleDebug --no-daemon --stacktrace
            fi
            cd ..
          fi

          # Handle other Java projects
          if [ -f ./gradlew ]; then
            echo "Root gradle wrapper found, building"
            chmod +x ./gradlew
            ./gradlew build --no-daemon --stacktrace
          elif [ -f ./build.gradle ] || [ -f ./build.gradle.kts ]; then
            echo "Gradle build files found in root, building"
            gradle build --no-daemon --stacktrace
          elif [ -f ./pom.xml ]; then
            echo "Maven project found, building"
            mvn clean compile -DskipTests
          else
            echo "No Java build files found, skipping build"
          fi

      - name: Build Swift code
        if: matrix.language == 'swift'
        run: |
          echo "Building Swift code..."
          if [ -f pubspec.yaml ]; then
            echo "Flutter project detected"
            
            # Get Flutter dependencies
            flutter pub get

            if [ -d ios ]; then
              echo "Building iOS app"
              cd ios
              # Install pods if needed
              if [ -f Podfile ]; then
                pod install --repo-update
              fi
              cd ..
              flutter build ios --no-codesign --simulator --debug
            fi

            if [ -d macos ]; then
              echo "Building macOS app"
              flutter build macos --debug
            fi
          elif [ -f Package.swift ]; then
            echo "Swift Package Manager detected"
            swift build
          elif ls *.xcodeproj 1> /dev/null 2>&1 || ls *.xcworkspace 1> /dev/null 2>&1; then
            echo "Xcode project detected"
            WORKSPACE=$(ls *.xcworkspace 2>/dev/null | head -1)
            PROJECT=$(ls *.xcodeproj 2>/dev/null | head -1)
            
            if [ -n "$WORKSPACE" ]; then
              SCHEME=$(xcodebuild -workspace "$WORKSPACE" -list | grep -A 100 "Schemes:" | grep -v "Schemes:" | head -1 | xargs)
              xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "platform=iOS Simulator,name=iPhone 15" build
            elif [ -n "$PROJECT" ]; then
              SCHEME=$(xcodebuild -project "$PROJECT" -list | grep -A 100 "Schemes:" | grep -v "Schemes:" | head -1 | xargs)
              xcodebuild -project "$PROJECT" -scheme "$SCHEME" -destination "platform=iOS Simulator,name=iPhone 15" build
            fi
          else
            echo "No recognized Swift build system found, skipping build"
          fi

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          upload: true
